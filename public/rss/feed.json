{
    "version": "https://jsonfeed.org/version/1",
    "title": "Yang",
    "feed_url": "undefined/rss/feed.json",
    "description": "Your blog description",
    "icon": "undefined/favicon.ico",
    "author": {
        "name": "Yang"
    },
    "items": [
        {
            "id": "undefined/articles/life/mywife",
            "content_html": "<p>不知不觉，已经结婚五年，五年前，我在qq空间发表一篇日志 <a href=\"https://user.qzone.qq.com/596622954/blog/1519383063\" target=\"_blank\">《十年》</a>， 在文章的最后，我分享了当时准备结婚的喜悦。\n时过境迁，文章里提到我的新浪微博也被封两年了。</p>\n<p>我和妻子相识于相亲，是姑姑给我介绍的。姑姑一直为我的婚姻大事而发愁，她是除了我爸，最关心我的人了。姑姑家的儿子结婚后没多久，她打听到自己儿媳的表姐还未婚，恰好她的表姐最近在相亲，并且年龄\n与我相仿，于是就赶紧介绍给我，让我加上她的微信。</p>\n<p>当时我正在无讼工作，无讼的同事于永雨也给我介绍一个女孩，这个女孩是永雨的同学，在北京互联网公司做测试，她对我好像对我不感冒，我在微信上几次联系她，并寻求有机会和她线下见面的时候，都被她婉拒了，\n我现在挺为那个女孩惋惜呢，因为他错过了一个这么好择偶对象😏</p>\n<p>加上我未来妻子的微信后，我向她简单介绍了我的工作内容，她也介绍了自己的工作，她的工作内容是传道，传基督教的道。我相亲遇到很多工作类型的女孩，大部分是教师，医生，销售，厂妹，做神职工作的还是第一次\n遇到。我和她聊了我对基督教的看法，因为我在大学的图书馆里，看过很多关于欧洲历史的书，整个欧洲历史都在围绕着宗教转。</p>\n<p>聊过一段时间后，双方觉得还不错，临近元旦，我还没有进一步的打算，但是我姑姑的一条微信瞬间给我指明了道路：“元旦你放假回来和她见见面”。于是我买了元旦前一天的高铁票，准备去漯河见面。</p>\n<p>一下高铁，就看到她在车站接我，这令我很感动，当时她的脸还胖乎乎的，后面她接我去饭店吃饭，我们第一次线下见面，双方觉得还不错，后面就结婚了，今天我要分享的是结婚后，我的媳妇给我带来了哪些改变。</p>\n<p>第一，能存住钱了，单身时候，花钱大手大脚，虽然有想存款意识，但是每天在外面吃饭，也是一大笔花费，还有单身就需要去相亲，每次相亲需要吃饭，看电影，买礼物，买衣服，这也花费不少。</p>\n<p>第二，身体变的更加健康了，以前没结婚，自己看手机，玩游戏，没有节制，经常熬夜，吃饭也不规律，这就导致身体不健康，结完婚后，媳妇每天做各种美食，使我的体重直线上升。</p>\n<p>第三，精神上的依靠，以前对很多事情想不明白，现在有了帮你排忧解难的人，有一次因为大宝不听话，我揍了她一顿，晚上我问媳妇：“为什么西方国家的夫妇，很少揍孩子，我们为什么一点就着？”， 媳妇说：“因为我们的\n社会压力比他们大，你每天辛苦工作，但是随时也可能面临被裁员；我们每天还要担心孩子生病，因为一生病，带孩子看病太难了；我们还要担心孩子上学的问题，外地人来北京读书太难了，各种居住证，房屋租赁合同都要准备齐全”。\n媳妇的回答瞬间给我解惑了，生在中国太难了。</p>\n<p>良好的婚姻的确能给男人带来不少进步，这几年我和媳妇经历了两次裁员，每次都是她鼓励我继续前进，不怕困难。感谢妻子，让我从一个大男孩变成一个男人。</p>",
            "url": "undefined/articles/life/mywife",
            "title": "我的妻子",
            "summary": "婚姻5载后，有感而发",
            "date_modified": "2023-06-15T00:00:00.000Z",
            "author": {
                "name": "Yang"
            }
        },
        {
            "id": "undefined/articles/share_bloger",
            "content_html": "<ul>\n<li>\n<p><a href=\"http://www.ruanyifeng.com/blog/\">阮一峰的网络日志</a>，每周的科技周刊必看，许多科技新闻都是从那里学到的。</p>\n</li>\n<li>\n<p><a href=\"https://www.zhangxinxu.com/\">张鑫旭</a>，CSS大神，我在培训的时候，张晓飞老师推荐过，买过他的CSS世界，加过大神的微信，最近在读他在掘金出版的小册《技术写作指南》。</p>\n</li>\n<li>\n<p><a href=\"https://cjting.me/2020/07/01/douyu-crawler-and-font-anti-crawling/\">斗鱼关注人数爬取</a> 通过html里面的字体样式，反解析出真实的关注人数，这个思路很有意思。</p>\n</li>\n<li>\n<p><a href=\"https://www.lionad.art/articles/\">为什么我要写博客</a>，为还在坚持输出博客的人点赞。</p>\n</li>\n<li>\n<p><a href=\"https://lutaonan.com/\">Randy&#x27;s Blog</a>，在twitter看到的，微软大佬，大一退学，很勇敢，他未来的妄想是参与推动中国的民主化建设，希望他能实现。</p>\n</li>\n<li>\n<p><a href=\"https://me.revome.cn/\">赵纯想</a>，现在这个博客就从作者那里copy过来的，感谢作者。</p>\n</li>\n<li>\n<p><a href=\"https://www.justzht.com/all/\">justzht</a>，log list形式的blog，很独特。</p>\n</li>\n<li>\n<p><a href=\"https://imququ.com/\">imququ</a>，专注web开发</p>\n</li>\n<li>\n<p><a href=\"https://www.barretlee.com/entry/\">小胡子哥的个人网站</a>，二胎女儿刚出生，富有想法，乐于分享。</p>\n</li>\n</ul>\n<p>我发现还在坚持在Web写博客的人，都是理想主义者，包括我自己。大牛的博客GUI并不是很花哨，全是实在实在的文字，真是学到了</p>",
            "url": "undefined/articles/share_bloger",
            "title": "分享我最近发现的宝藏博主",
            "summary": "阅读别人的博客，真是越来越觉得自己的知识面太窄了，这里分享一些我最近发现的宝藏博主，希望能给你带来一些启发。",
            "date_modified": "2023-04-27T00:00:00.000Z",
            "author": {
                "name": "Yang"
            }
        },
        {
            "id": "undefined/articles/vue_press_ui/endof2022",
            "content_html": "<hr/>\n<p>不知不觉，已经年底，大街小巷都在等待农历新年的到来，人们穿新衣，放烟花，当然也少不了年终总结。\n以下这篇文章摘抄自陈枝辉律师的微博，我和陈律短暂在无讼共事过，他呕心7年，著作 《天同码》，我曾多次在天同见他\n挑灯夜战，为了完成著作最后的纠错，他封闭自己一年，不和家里人见面，错过侄女的婚礼，此种精神，甚是敬佩，今日摘抄他的文章，分享给大家。</p>\n<p>【律所工作心态与状态】</p>\n<p>因在律所负责自己业务团队，同时负责所内知识中心工作，需不时关注小伙伴工作状态，也会经常思考：律所工作，该有怎样的心态与状态？一些肤浅感悟，简单整理一下，与朋友分享或共勉：</p>\n<p>①【心智自由】一个走出大学校门的成年人，应对自己职业道路多少有些定位和规划。毕业后必须工作，并非天经地义，因为同学们都工作了，或不想让家里父母或亲戚埋怨，或是不好意思再向家里人伸手，以此心态踏入职场，外观上虽与其他职场人无异，但工作作为谋生手段、成年人理所当然应由社会提供工作单位的观念，会在漫长工作历程中潜移默化产生消极影响。没有自我提升规划与计划，没有对工作本质的理解与领悟，以为朝九晚五就是人生主旋律，是人生存在意义，一天两天，一月两月，一年两年，五年十年，温水青蛙，终日奔忙，转头碌碌。将单位工作每一天，当成在此处最后一天来过，保持随时离开能力，是心智自由一种境界。人群中的温暖、工作内容按部就班，均不应是工作带来的真正意义；工作内容能否帮助到最终接收对象解决问题，节省他人时间、精力，如同本人亲历，以独当一面方式为他人排忧解难，是能力，也是格局。</p>\n<p>②【情绪稳定】生活中无论多狂野，无论多苦大仇深，工作上应有简洁、高效作风，不夹杂与工作无关事务与情绪。人群中保持定力，专注于工作成果与效果，不畏难，不浮躁，不自怨自艾，不应将自己认为重大乃至天塌的家事或私事转化为团队大事。须知，每个人，无论路人或身边同事，都有自己需独立处理诸多大小事务，因工作在一起，勿将生活琐屑及情绪带入职场，勿因同声相求、同仇敌忾而在人群中结盟，以为抱团取暖，对他人及工作评判不因个人利益以及身边友朋随意附和而受影响。保持同理心，理解和尊重他人行事方式，相信他人也可能是其家人、亲友构成的人际生态中的顶梁柱和完美化身，只是你绌于接触、了解而已。做一个情绪稳定的人，不急刻躁竞，把工作上的事情处理好，把客户挠头事务用心化解，当为职业风范。</p>\n<p>③【创造力工作】心智自由，理解工作不止是俗浅的谋生手段，而是自我成就、自我愉悦和实现过程，自然会以能动方式处理工作。将踩点打卡上下班视为心安无愧工作表现，是自我人格束缚的牢笼桎梏。真正的时间表，是不断挑战自己、突破自己，尽最大努力将手头事做到完美，而非自我或他人对某一具体事项的计时设限。踏实工作、用心工作、能动工作，才是此世界不断趋向美好的动力源泉。不单是为别人工作，更应是为自己工作，在自己有限时空领域通过工作创造美好，是每个个体眼下对抗流水岁月、未来奔赴山海的起点与征途。</p>\n<p>④【时间规划】剩下的就是时间利用了。每个人都会向往闲适逸豫生活，海景椰风拂人心，斜曦余晖慰倦尘，但凡财富自由，相信没几个人能继续长时埋首繁牍、沉湎牵心动肠事。当然，历经千帆，倦鸟思归，可能最后发现远方美景不是目的，美食也不是终点，自律的自由才更有璀璨光芒。无论穷富，工作或做事情都是可以并应当伴随一生之事，从中可深入探触到生命意义。与时间为友，不轻薄、不恐慌，当下及未来，都在时间刻度里。规划时间能力其实也是把控人生能力，如何过今天，映照出如何过一生模样。</p>\n<p>年轻时，惶惑人生两件事：婚姻、工作。因均需投入极大热情，均需非同一般的缘分才能发生及圆满。后来发现，轰轰烈烈不是爱情，震天动地也不是工作，日复一日的热爱和坚持，才是人生充盈真正密码。</p>\n<p><img src=\"/images/life/lunch.jpg\" alt=\"聚餐\"/></p>",
            "url": "undefined/articles/vue_press_ui/endof2022",
            "title": "2022年终",
            "summary": "用文字记录生活",
            "date_modified": "2023-01-11T00:00:00.000Z",
            "author": {
                "name": "Yang"
            }
        },
        {
            "id": "undefined/articles/vue_press_ui/brainstorm",
            "content_html": "<p>————</p>\n<p>最近看了 纽约时报 一篇关于字节跳动的文章，<a href=\"https://cn.nytimes.com/technology/20221227/tiktok-us-china-diplomacy/\">《TikTok的成功与宿命：夹在中美之间的时代产物》</a> <code>备注：点击链接可以阅读文章，但是一些图片看不到，可能需要科学上网</code>，我觉得这篇文章把张一鸣分析的很透彻，\n看了这篇文章，对张一鸣更加崇拜了，他的一些观点让我受益匪浅，下面分享一下对我触动比较深的想法</p>\n<ol>\n<li>尽可能少的让用户做选择</li>\n<li>以前的产品都是用户选择自己信息，现在要让信息去寻找用户，而不是反过来</li>\n<li>将人与信息连接起来</li>\n</ol>\n<p>简单记录一下我和亚坤的Brain Storm 记录，希望有机会我们也可以付出实践</p>\n<h2>Log list</h2>\n<h3>1. 做一款记录孩子成长里程碑的软件（2022年12月28日）</h3>\n<ul>\n<li>亚坤：\n我的想法是家长可以给孩子制定一系列成长路线图，没达成一个里程碑，家长可以向孩子发放一枚勋章</li>\n<li>我：\n我在你的想法延伸一下，只有产品做到，装上咱们app或者戴上一些可穿戴设备，就能智能识别 孩子当前处于哪个里程碑，这样才是比较酷的，也有卖点</li>\n</ul>\n<h3>2. 做一款能根据孩子哭声，识别孩子需求的软件（2022年12月28日）</h3>\n<ul>\n<li>我：\n可以做一个统计婴儿哭泣声音的大数据库，然后分门别类，根据婴儿的哭泣声，推断出不同需求</li>\n</ul>\n<h3>3. 做一个留言系统（2022年11月23日）</h3>\n<ul>\n<li>亚坤：\n想做一个留言系统，因为公众号不能留言</li>\n</ul>\n<h3>4. 做一个英文词典app（2022年11月23日）</h3>\n<ul>\n<li>我：\n想做一个词典app，每个单词下面用户都可以评论，分享自己当时怎么学习这个单词的，分享关于这个英文单词的梗</li>\n</ul>",
            "url": "undefined/articles/vue_press_ui/brainstorm",
            "title": "分享和亚坤的一些想法",
            "summary": "简单记录一下我和亚坤的Brain Storm 记录，希望有机会我们也可以付出实践",
            "date_modified": "2022-12-28T00:00:00.000Z",
            "author": {
                "name": "Yang"
            }
        },
        {
            "id": "undefined/articles/vue_press_ui/tempermonkey",
            "content_html": "<blockquote>\n<p>Tampermonkey(油猴) 是Chrome浏览器插件，使用它可以用来屏蔽知乎的广告，Tampermonkey 怎么实现的呢? 很简单！当我们在刷知乎或者微博的信息流\n的时候，浏览器会把这些页面呈现给我们，这些页面也是由类似积木拼接起来的，只不过用户看不到浏览器在下面做的工作。下面以访问知乎为例</p>\n</blockquote>\n<p><img src=\"/images/tampermonkey/layout.png\" alt=\"layout\"/></p>\n<p>我们可以很容易的看到，广告元素和正常元素还是不一样的，广告元素的class多了一个 <code>TopstoryItem--advertCard</code>，我们把这个不一样\n的广告元素剔除就可以了，我们打开浏览器的的开发者模式(Mac键盘同时按下 comand + option + i, windows 按 F12)，进入console输入下面的代码试一下，\n就可以神奇的发现广告元素不见了。</p>\n<p><img src=\"/images/tampermonkey/console.png\" alt=\"console\"/></p>\n<pre><code>let list = document.getElementsByClassName(&#x27;TopstoryItem--advertCard&#x27;)\nArray.prototype.forEach.call(list, (item) =&gt; {\n    item.style.display = &#x27;none&#x27;\n})\n</code></pre>\n<p>tampermonkey 就是帮我们做了这些事情，下面是tampermonkey的安装步骤。</p>\n<h3>1. 在Chrome的应用市场安装tampermonkey</h3>\n<p><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN\">应用市场</a> 大陆用户可能需要科学上网，</p>\n<p><img src=\"/images/tampermonkey/tampermonkey.png\" alt=\"tampermonkey\"/></p>\n<h3>2. 在Chrome扩展程序里面打开tampermonkey</h3>\n<p><img src=\"/images/tampermonkey/program.png\" alt=\"Chrome扩展程序\"/></p>\n<h3>3. 在tampermonkey添加脚本</h3>\n<p><img src=\"/images/tampermonkey/plugins.png\" alt=\"plugins\"/></p>\n<h3>4. 编写脚本</h3>\n<p>屏蔽知乎广告：把下面这些代码复制进去，然后保存，你还可以把不想看的关键字加进去，比如你不想看关于 吴亦凡 推荐</p>\n<pre><code>// ==UserScript==\n// @name         clean zhihu ad\n// @namespace    http://tampermonkey.net/\n// @version      0.1\n// @description  try to take over the world!！\n// @author       You\n// @match        https://www.zhihu.com\n// @grant        none\n// ==/UserScript==\n\nvar sameNames = [];\n\n// 这里是屏蔽列表, 不想看的关键字写在这里就行了.\nvar gotohell = [&quot;广告&quot;, &quot;吴亦凡&quot;];\n\nwindow.onload=function()\n{\n    var main = document.getElementsByClassName(&quot;Topstory-recommend&quot;)[0];\n    main.addEventListener(&quot;DOMNodeInserted&quot;, function() {\n        hideItems();\n    });\n    function hideItems() {\n        var items = document.getElementsByClassName(&quot;TopstoryItem&quot;);\n        for (var i = 0; i &lt; items.length; ++i)\n        {\n            if (items[i].classList.contains(&quot;TopstoryItem--advertCard&quot;)) {\n                items[i].style.display = &quot;none&quot;;\n                console.log(&#x27;wv&#x27;);\n            };\n\n            if (items[i].classList.contains(&quot;alreadyfucked&quot;)) continue;\n            //console.log(&quot;doing&quot; +　i);\n            var title = items[i].getElementsByClassName(&quot;ContentItem-title&quot;);\n            var a;\n            if (title.length) a = title[0].getElementsByTagName(&quot;a&quot;);\n            else continue;\n            var text = a[0].innerHTML;\n            for (var j = 0; j &lt; gotohell.length; ++j) {\n                if (text.match(gotohell[j])) {\n                    console.log(gotohell[j]);\n                    items[i].style.display = &quot;none&quot;;\n                }\n            }\n\n\n            //for (var jj = 0; jj &lt; sameNames.length; ++jj) {\n            //    if (text==sameNames[jj]) {\n            //        console.log(sameNames[jj]);\n            //        items[i].style.display = &quot;none&quot;;\n            //    }\n            //}\n            //sameNames.push(text);\n            items[i].classList.add(&quot;alreadyfucked&quot;);\n        }\n    }\n}\n</code></pre>\n<p>屏蔽百度广告：把下面这些代码复制进去，屏蔽广告</p>\n<pre><code>// ==UserScript==\n// @name               百度广告(首尾推广及右侧广告)清理\n// @name:en            Kill Baidu AD\n// @name:zh-TW         百度廣告(首尾推廣及右側廣告)清理\n// @namespace          hoothin\n// @version            1.22\n// @description        彻底清理百度搜索(www.baidu.com)结果首尾的推广广告、二次顽固广告、右侧广告，并防止反复\n// @description:en     Just Kill Baidu AD\n// @description:zh-TW  徹底清理百度搜索(www.baidu.com)結果首尾的推廣廣告、二次頑固廣告、右側廣告，並防止反復\n// @author             hoothin\n// @include            http*://www.baidu.com/*\n// @include            http*://m.baidu.com/*\n// @grant              GM_xmlhttpRequest\n// @run-at             document-start\n// @license            MIT License\n// @compatible         chrome 测试通过\n// @compatible         firefox 测试通过\n// @compatible         opera 未测试\n// @compatible         safari 未测试\n// @contributionURL    https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=rixixi@sina.com&amp;item_name=Greasy+Fork+donation\n// @contributionAmount 1\n// ==/UserScript==\n\n(function() {\n    &#x27;use strict&#x27;;\n    var killBaijiaType=2;\n    var MO = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n    if(MO){\n        var observer = new MO(function(records){\n            records.map(function(record) {\n                if(record.addedNodes.length){\n                    [].forEach.call(record.addedNodes,function(addedNode) {\n                        clearOneAD(addedNode);\n                    });\n                }\n            });\n        });\n        var option = {\n            &#x27;childList&#x27;: true,\n            &#x27;subtree&#x27;: true\n        };\n        observer.observe(document, option);\n    }\n\n    function checkBaijia(item){\n        var itemHref=item.querySelector(&quot;a&quot;).href;\n        item.style.display=&quot;none&quot;;\n        if(itemHref.indexOf(&quot;baidu.com&quot;)==-1)return;\n        var gmxhr=GM_xmlhttpRequest({\n            url: itemHref,\n            headers: {\n                &quot;Accept&quot;: &quot;text/html&quot;\n            },\n            method: &quot;head&quot;,\n            onreadystatechange:function(response) {\n                if(response.readyState==4){\n                    if(response.finalUrl.indexOf(&quot;baijiahao.baidu.com&quot;)!=-1){\n                        item.remove();\n                    }else{\n                        item.style.display=&quot;&quot;;\n                    }\n                    gmxhr.abort();\n                }\n            }\n        });\n    }\n\n    function clearAD(){\n        if(!document.querySelectorAll)return;\n        var mAds=document.querySelectorAll(&quot;.ec_wise_ad,.ec_youxuan_card,.page-banner&quot;),i;\n        for(i=0;i&lt;mAds.length;i++){\n            var mAd=mAds[i];\n            mAd.remove();\n        }\n        var list=document.querySelectorAll(&quot;#content_left&gt;div,#content_left&gt;table&quot;);\n        for(i=0;i&lt;list.length;i++){\n            let item = list[i];\n            let s = item.getAttribute(&quot;style&quot;);\n            if (s &amp;&amp; /display:(table|block)\\s!important/.test(s)) {\n                item.remove();\n            }else{\n                var span=item.querySelector(&quot;div&gt;span&quot;);\n                if(span &amp;&amp; span.innerHTML==&quot;广告&quot;){\n                    item.remove();\n                }\n                [].forEach.call(item.querySelectorAll(&quot;span,a&quot;),function(span){\n                    if(span &amp;&amp; (span.innerHTML==&quot;广告&quot; || span.getAttribute(&quot;data-tuiguang&quot;))){\n                        item.remove();\n                    }\n                });\n                if(killBaijiaType==2){\n                    [].forEach.call(item.querySelectorAll(&quot;a&gt;div&gt;span+img&quot;),function(img){\n                        if(img &amp;&amp; /^https?:\\/\\/pic\\.rmb\\.bdstatic\\.com/.test(img.src)){\n                            //checkBaijia(item);\n                            item.remove();\n                        }\n                    });\n                }\n            }\n        }\n\n        var eb = document.querySelectorAll(&quot;#content_right&gt;table&gt;tbody&gt;tr&gt;td&gt;div&quot;);\n        for(i=0;i&lt;eb.length;i++){\n            let d = eb[i];\n            if (d.id!=&quot;con-ar&quot;) {\n                d.remove();\n            }\n        }\n\n        var nr = document.querySelector(&quot;#content_right&gt;div&gt;div&gt;div&quot;);\n        if(nr){\n            var nra=nr.querySelectorAll(&quot;a&quot;);\n            for(i=0;i&lt;nra.length;i++){\n                let d = nra[i];\n                if (d.innerHTML==&quot;广告&quot;) {\n                    nr.remove();\n                    break;\n                }\n            }\n        }\n    }\n\n    function clearOneAD(ele){\n        if(ele.nodeType!=1)return;\n        if(ele.classList.contains(&quot;ec-tuiguang&quot;) || ele.classList.contains(&quot;ec_wise_ad&quot;) || ele.classList.contains(&quot;ec_youxuan_card&quot;) || ele.classList.contains(&quot;page-banner&quot;)){\n            ele.remove();\n            return;\n        }\n        if(ele.parentNode &amp;&amp; ele.parentNode.id==&quot;content_left&quot; &amp;&amp; (ele.nodeName==&quot;DIV&quot; || ele.nodeName==&quot;TABLE&quot;)){\n            let s = ele.getAttribute(&quot;style&quot;);\n            if (s &amp;&amp; /display:(table|block)\\s!important/.test(s)) {\n                ele.remove();\n            }else{\n                var span=ele.querySelector(&quot;div&gt;span&quot;);\n                if(span &amp;&amp; span.innerHTML==&quot;广告&quot;){\n                    ele.remove();\n                }\n                [].forEach.call(ele.querySelectorAll(&quot;span,a&quot;),function(span){\n                    if(span &amp;&amp; (span.innerHTML==&quot;广告&quot; || span.getAttribute(&quot;data-tuiguang&quot;))){\n                        ele.remove();\n                    }\n                });\n                if(killBaijiaType==2){\n                    [].forEach.call(ele.querySelectorAll(&quot;a&gt;div&gt;span+img&quot;),function(img){\n                        if(img &amp;&amp; /^https?:\\/\\/pic\\.rmb\\.bdstatic\\.com/.test(img.src)){\n                            //checkBaijia(ele);\n                            ele.remove();\n                        }\n                    });\n                }\n            }\n        }else if(ele.parentNode &amp;&amp; ele.parentNode.id==&quot;content_right&quot;){\n            if(ele.nodeName==&quot;TABLE&quot;){\n                var eb = ele.querySelectorAll(&quot;tbody&gt;tr&gt;td&gt;div&quot;);\n                for(var i=0;i&lt;eb.length;i++){\n                    let d = eb[i];\n                    if (d.id!=&quot;con-ar&quot;) {\n                        d.remove();\n                    }\n                }\n            }\n            if(ele.nodeName==&quot;DIV&quot;){\n                var nr = ele.querySelector(&quot;div&gt;div&quot;);\n                if(nr){\n                    var nra=nr.querySelectorAll(&quot;a&quot;);\n                    for(i=0;i&lt;nra.length;i++){\n                        let d = nra[i];\n                        if (d.innerHTML==&quot;广告&quot;) {\n                            nr.remove();\n                            break;\n                        }\n                    }\n                }\n            }\n        }else{\n            let eles=ele.querySelectorAll(&quot;#content_left&gt;div,#content_left&gt;table&quot;);\n            [].forEach.call(eles, e=&gt;{clearOneAD(e)});\n        }\n    }\n    setTimeout(()=&gt;{clearAD();},2000);\n})();\n</code></pre>\n<h3>5.测试是否生效</h3>\n<ul>\n<li>\n<p>知乎结果\n<a href=\"https://www.zhihu.com/\">访问知乎</a></p>\n</li>\n<li>\n<p>百度结果\n<img src=\"/images/tampermonkey/baiduad.png\" alt=\"baidu\"/></p>\n</li>\n</ul>\n<h3>6. 总结</h3>\n<p>Tampermonkey可以说是学习Web必备的工具，只要你用过一次，就会爱上它。我也是一次偶然的机会才了解到它，有个医生同学找我帮忙，工作\n需要查找 Sci-Hub 网站上面的文献，论文下载的时候需要用到这个神奇的工具。tampermonkey的功能还有很多，上面只是知乎和百度的屏蔽广告的例子，\n还有微博的屏蔽广告的code我没有贴出来，你如果想要可以私信我，你也可以去tampermokey脚本市场下载，文章多有不足之处，欢迎指正和留言。</p>",
            "url": "undefined/articles/vue_press_ui/tempermonkey",
            "title": "如何使用Tampermonkey屏蔽知乎/百度广告？",
            "summary": "Web",
            "date_modified": "2021-07-02T00:00:00.000Z",
            "author": {
                "name": "Yang"
            }
        },
        {
            "id": "undefined/articles/jenkins",
            "content_html": "<p>———-</p>\n<p>第一次写博客，今后我准备把自己的想法或者实践，以博客的形式分享给大家，对外输出的同时，也有助于自己的技术提升。\n直接分享这次实践的结果，代码有更新，push到远端，网站自动更新。\n具体实现原理，远端收到更新，通过一个hook，告诉Jenkins去build代码，Jenkins在编译代码后会执行一个shell脚本，然后把编译后的代码转移到Nginx代理的目录下。下面是实现过程</p>\n<h3>部署Jenkins</h3>\n<p>我购买的是阿里云的服务器，操作系统是CentOS7，本次就以CentOS7为例。</p>\n<h4>1.准备工作</h4>\n<p>Jenkins的宿主环境是java，所以我们需要安装java, 如果你的服务器已经安装过java可以跳过此步骤。<br/>\n<code>yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel</code></p>\n<h4>2.安装</h4>\n<ul>\n<li>先下载到本地<br/>\n<code>sudo wget -O /etc/yum.repos.d/Jenkins.repo https://pkg.Jenkins.io/redhat-stable/Jenkins.repo</code></li>\n<li>导出密钥（若之前已从Jenkins导入过密钥，“rpm--import”将失败，请忽略，继续执行下面)<br/>\n<code>sudo rpm --import https://pkg.Jenkins.io/redhat-stable/Jenkins.io.key</code></li>\n<li>安装Jenkins<br/>\n<code>yum install -y Jenkins</code></li>\n<li>查看Jenkins安装信息<br/>\n<code>rpm -ql Jenkins</code></li>\n</ul>\n<h4>3.配置和启动</h4>\n<ul>\n<li>修改配置文件<br/>\n<code>vim /etc/sysconfig/Jenkins</code><br/>\nJenkins默认端口8080，若被占用或想更换端口，修改Jenkins_PORT的值Jenkins_PORT=&quot;端口号&quot;</li>\n<li>启动Jenkins<br/>\n<code>systemctl start Jenkins.service</code> 或者 <code>service Jenkins start</code></li>\n</ul>\n<p>我使用的代码托管工具是GitHub, 服务器安装好Jenkins之后，下面我们来介绍怎么让Jenkins和GitHub关联起来，\n换言之，就是让Jenkins能pull到你在GitHub托管的代码。</p>\n<h3>服务器和GitHub关联</h3>\n<ul>\n<li>安装git<br/>\n<code>yum install git</code></li>\n<li>生成一个新的 SSH key<br/>\n<code>ssh-keygen -t ed25519 -C &quot;your_email@example.com&quot;</code></li>\n<li>把生成的 SSH key 的公钥添加到GitHub账户<br/>\n<code>vim ~/.ssh/id_ed25519.pub</code> 可以看到服务器的公钥，复制文件里以你的邮箱为结尾的字符串\n然后到GitHub账户，找到 Settings--&gt; SSH and GPG keys --&gt; New SSH key 然后把刚才复制那段字符串粘贴到输入框里面\n然后点击 Add SSH key, 添加成功后，可以在你的SSH keys 列表看到最近的读写记录。</li>\n</ul>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgithub_sshkey.f77106e7.png&amp;w=828&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgithub_sshkey.f77106e7.png&amp;w=1920&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgithub_sshkey.f77106e7.png&amp;w=1920&amp;q=75\" width=\"765\" height=\"131\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>如果你看到这个，现在只能说明你的服务器和GitHub已经关联起来，怎么让Jenkins可以直接pull代码，下面接着说。</p>\n<h3>Jenkins和GitHub关联</h3>\n<ul>\n<li>登陆Jenkins，找到全局凭据，把服务器的密钥copy进来</li>\n</ul>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins_private.28d410a9.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins_private.28d410a9.png&amp;w=3840&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins_private.28d410a9.png&amp;w=3840&amp;q=75\" width=\"1299\" height=\"870\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<h3>任务和GitHub关联</h3>\n<p>前面只是把Jenkins和GitHub关联起来了，下面我们还要具体到某一个任务。</p>\n<ul>\n<li>在Jenkins创建一个自由风格的任务，General选择GitHub项目，把GitHub上的一个仓库地址复制过来(配置前，需要给Jenkins安装Git、GitHub、GitLab plugins这些插件)</li>\n</ul>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgeneral-config.0b9b43bd.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgeneral-config.0b9b43bd.png&amp;w=1920&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgeneral-config.0b9b43bd.png&amp;w=1920&amp;q=75\" width=\"881\" height=\"534\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<ul>\n<li>源码管理选择 Git，把GitHub仓库地址一样复制过来，Credentials选择我们在上一步添加的私钥，如果错误会报error，正确就一切正常\n源码浏览器选择githubweb，URL也是一样复制过来</li>\n</ul>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsource-code.56c4bbcf.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsource-code.56c4bbcf.png&amp;w=3840&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsource-code.56c4bbcf.png&amp;w=3840&amp;q=75\" width=\"1486\" height=\"787\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<ul>\n<li>构建触发器\n这一步是当我们往GitHub提交代码的时候，GitHub会调用这个api，这就需要我们在GitHub上的仓库中配置Jenkins的地址<br/>\n在GitHub的某一个仓库中，选择 settings -&gt; Webhooks -&gt; Add webhook</li>\n</ul>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgithub-webhook.6d3fea7b.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgithub-webhook.6d3fea7b.png&amp;w=3840&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgithub-webhook.6d3fea7b.png&amp;w=3840&amp;q=75\" width=\"1417\" height=\"781\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>Jenkins 构建触发器 配置选上 GitHub hook trigger for GITScm polling</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-trigger.7d41d95b.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-trigger.7d41d95b.png&amp;w=1920&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-trigger.7d41d95b.png&amp;w=1920&amp;q=75\" width=\"841\" height=\"210\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<ul>\n<li>构建环境\n我的个人项目是用VueJs编写的，打包的时候需要用到NPM，那样Jenkins就需要安装NodeJS插件。<br/>\n安装的插件步骤，先去Jenkins插件管理安装NodeJS插件，然后在全局工具配置里面新增NodeJS安装</li>\n</ul>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-nodejs.76e7abe6.png&amp;w=1200&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-nodejs.76e7abe6.png&amp;w=3840&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-nodejs.76e7abe6.png&amp;w=3840&amp;q=75\" width=\"1126\" height=\"792\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>然后Jenkins任务配置，构建环境 勾选上Node</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-build-env.bc120ac5.png&amp;w=828&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-build-env.bc120ac5.png&amp;w=1920&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fjenkins-build-env.bc120ac5.png&amp;w=1920&amp;q=75\" width=\"806\" height=\"518\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<h3>代码提交，自动部署</h3>\n<p>我们测试一下刚才的成果，push一行测试代码，到GitHub后，配置的webhook会触发Jenkins，这时任务状态栏会有一个状态栏</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbuild-status.f78f4875.png&amp;w=640&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbuild-status.f78f4875.png&amp;w=1080&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fbuild-status.f78f4875.png&amp;w=1080&amp;q=75\" width=\"453\" height=\"210\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>点击去查看详情，点击控制台输出</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fconsole.1cb15fc5.png&amp;w=828&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fconsole.1cb15fc5.png&amp;w=1920&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fconsole.1cb15fc5.png&amp;w=1920&amp;q=75\" width=\"802\" height=\"447\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>最后面可以看到输出结果，有没有看到我们熟悉的Success？</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsuccess.dfb7edea.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsuccess.dfb7edea.png&amp;w=1920&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fsuccess.dfb7edea.png&amp;w=1920&amp;q=75\" width=\"913\" height=\"405\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<h3>部署Nginx</h3>\n<p>前面我们只是把我们的项目构建成功了，外面的用户的还是看不到我们的页面，这时就需要用到nginx。</p>\n<ul>\n<li>安装nginx\n<code>sudo yum -y install nginx </code></li>\n<li>配置nginx\n<code>vim /etc/nginx/nginx.conf</code></li>\n</ul>\n<pre><code>server {\n        listen       4001 default_server;\n        server_name  _;\n\n        location / {\n            root /yang/web/css_world/dist;\n            index index.html index.htm;\n        }\n    }\n\n</code></pre>\n<p>此处我配置的端口是4001，在阿里云上需要把这个端口号放开，nginx配置后需要重启一下服务。</p>\n<ul>\n<li>jenkins打包之后的shell脚本也要修改一下。</li>\n</ul>\n<pre><code>#!/bin/bash\ncd $WORKSPACE\nnpm install\nnpm run build\ntar -cvf dist.tar ./dist\ntar xvf ./dist.tar -C /yang/web/css_world/\n</code></pre>\n<p>配置完之后，我们再提交一下代码，测试我们刚才的配置是否生效，访问域名+端口号，可以看到页面就说明已经成功了。</p>\n<h3>GitLab和Jenkins关联</h3>\n<p>上面我们测试是用的GitHub，如果你想要用GitLab，整个工作流程差不多，下面我分享一下Github和Gitlab不一样的地方。</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-trigger.e1e1d3a9.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-trigger.e1e1d3a9.png&amp;w=3840&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-trigger.e1e1d3a9.png&amp;w=3840&amp;q=75\" width=\"1052\" height=\"655\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>github的构建触发器选择之后，后面有一个高级按钮，点击会出现一个生成token的按钮，按照下面图片的配置，会给一个token</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-advanced.b80536a4.png&amp;w=1920&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-advanced.b80536a4.png&amp;w=3840&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-advanced.b80536a4.png&amp;w=3840&amp;q=75\" width=\"1487\" height=\"672\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<p>配置完之后，登陆自己的gitlab，找到项目 setting -&gt; webhook -&gt; 添加刚才在Jenkins配置时候提示的URL和Token，添加就好了</p>\n<img alt=\"\" srcSet=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-webhook.039737f0.png&amp;w=1080&amp;q=75 1x, /_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-webhook.039737f0.png&amp;w=3840&amp;q=75 2x\" src=\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fgitlab-webhook.039737f0.png&amp;w=3840&amp;q=75\" width=\"1025\" height=\"385\" decoding=\"async\" data-nimg=\"1\" loading=\"lazy\" style=\"color:transparent\"/>\n<h3>总结</h3>\n<p>至此我们的代码就可以实现自动部署和更新了，如果你是第一次尝试，可能会遇到这样那样的问题，很正常，我刚开始也是遇到很多坑，\n遇到问题不要着急，看log日志，google一下，博客排版不怎么好，如果有错别字欢迎纠正，也欢迎你给我留言，博客右上角connect可以看到我的GitHub地址，谢谢。</p>",
            "url": "undefined/articles/jenkins",
            "title": "Jenkins自动化部署",
            "summary": "代码提交到Github，通过Jenkins自动打包，更新",
            "date_modified": "2021-05-31T00:00:00.000Z",
            "author": {
                "name": "Yang"
            }
        },
        {
            "id": "undefined/articles/vue_press_ui/atguigu",
            "content_html": "<p>———-</p>\n<p>很久没有写过文章了，这次要写一篇感谢信，要感谢的主体是一个学校，更确切的说是一座北京昌平的小培训学校，为什么说他小，且听我慢慢道来。</p>\n<p>故事发生在2017年的春节的前夕，当时刚从郑州的一家公司辞职，我在这家公司做的是销售一职；离职的原因估计和大多数人一样，工资比较低，在郑州这座城市，每月3000左右的工资很是普遍，这还不包括吃住，但是我心中一直确信，我的未来一定不会一直这样持续下去。辞职后，我和同学出去玩了一阵子，玩过之后，很是焦虑，因为我心里很清楚，今年又没攒住钱，春节回老家又要面对亲戚朋友的质问了......</p>\n<p>就在我迷茫的时候，我的一个大学室友亚坤告诉我，他准备去北京培训学习IT技术，我听到后的第一反应，是不是传销啊，还要交那么多钱，他让我放心，是他同学推荐他来的，并且他的同学已经在北京入职，并且把他同学的手机号发给了我。我的心情很是忐忑，我觉得不要这样下去了，我要改变自己的人生，我就拨通了他同学的手机号，我们通话的很开心，当他告诉我他月薪10k的时候，我的心燃了，简直不敢相信，竟然会有这么高的工资，如果我有这么高的工资，我会怎样的生后，往后想想都幸福。</p>\n<p>接下来，同学把学校的名字告诉了我，并且还给了我咨询老师的QQ号码，这个学校的名字我听到觉得很像美国硅谷，心想学校肯定会不错，我的咨询老师是辛辛老师，人不错，也是个美女，细心的指导我进入学校的流程，开始笔试，然后学校的技术老师视频面试（这一点我是很赞同的，学校是为每位学员都负责任的）。这一切确认之后，我就交了200元的押金，准备过完年，去北京闯一下。我报的是2017年3月24日的H5前端就业班。</p>\n<p>过完春节3月份，我收拾好自己的行李，就坐火车来到了北京。还好我的同学亚坤提前找好房子了，我就直接和他合租了，这样我就不用为找房子而发愁了。然后办理入职，贷款手续，兴致勃勃的准备新的征程。3月份的北京还是很冷的，那时候还穿羽绒服，可是同学的学习氛围很高涨，并且同学之间的关系很温暖，大家相互帮助，共同进步。入职那天学校让每个人都是上台发言，我有幸被龙哥选为组长，龙哥是个很好的班主任，他有次吃饭还为我付账，我当时就觉得，这个培训学习真的很不错，像自己家一样，让我有种重新回到大学校园的感觉。下面分享一张我们班的图片。</p>\n<p><img src=\"/images/atguigu/classing.jpg\" alt=\"class\"/></p>\n<p>学校每天的中午的分享是我最喜欢的，我很喜欢这种方式，因为从这里可以看出每个人以前的生活经历，班里的学生轮流做分享，丰富了我们的视野，也从另一方面给了我们上台的勇气！</p>\n<p>然后后面的一大段学习时间还是很枯燥的，老师每天讲的知识点都不能完全消化，还好各位老师都很细心，我每次碰到不明白的都及时请教老师，老师都细心的给我指点，我都怀疑学校的讲师是不是都嫌弃我这个学生了（滑稽脸）。超哥的讲课很有趣，能让我们没有基础的学生投入进去，志勇老师讲课的声音很洪亮，不让我们犯困，飞哥很幽默，每次他讲课我都很精神。最后也要感谢我们的就业老师：春艳老师，真的很贴心，事无巨细的帮助我们，当时投简历的时候真的帮助我不少。</p>\n<p>学习的过程真的很枯燥，有一段时间，害怕面对工作的压力，我和亚坤晚上都出现失眠的情况，我们去学校旁边的药店买安神补脑液喝，只有这样我们才能睡的踏实，不耽误明天的课程。</p>\n<p>时间过的很快，转眼间四个半月的学习课程都结束了，在结课那段时间，同学们相互都舍不得，毕竟我们也是一起奋斗过的战友。我是8月中旬毕业的，那段时间北京的天气燥热，我的行程安排的满满的，第一次面试我真的很紧张，面试官详细的问了我大概一个钟头，问的内容有技术专业知识，也有以前公司的技术选择问题，可能是我回答的不是很好，第一家就没有下文了，下面分享一张我当时面试的行程表：</p>\n<p><img src=\"/images/atguigu/calendar.jpeg\" alt=\"calendar\"/></p>\n<p>周三面试了两家，我的表现都不太好，这时候我开始慌了，因为我们班已经有一小部分同学拿到offer了，我开始有小情绪了，到了下午有人给我打电话让我明天去，我的身体实在太疲惫了，我就给人家说我明天行程满了，推到了后天，于是周四我就在宿舍歇息了一天。我打算调整好心情，周五好好去面试。到了周五上午还有一家，在天通苑小区里面，刚开始一切都聊得还不错，领导也是我们老乡，到了最后，他拿出电脑让我比这一张图片画页面，我开始慌了，做了二十分钟，实在没有做出来，我就放弃了.....到了下午，来到了天安门附近的一家公司，刚进去，前台让我歇息了一会儿，就给我拿出来面试题让我做，我给题目分享到我们班的群里，小伙伴们争相给我出主意，这里要感谢一下我们班的小伙伴们！可是十道题我就完整的做完了三道题，其他的题我也不怎么想写了，接下来就是技术主管面试我了，他看了我答的试卷，觉得不是很满意，从他的表情我可以看出来，毕竟我就只答了三道题。可是到了后面，他问了我一道关于RESTful风格的接口的特征，我心里暗自庆幸，这不是小飞老师刚讲过的吗，我也刚好昨天来的时候看了一遍，我就给他娓娓道来，技术主管开始对我有了好感，他坦白说准备随便问我几句，让我回去呢，因为他面试这么多人，答题的人都写满了，从没有一个像我这样的！于是他告诉我，你在这等一下，再给你的题补全一下，等会儿项目经理和HR会面试你，别让他们看到你的试卷！</p>\n<p>下面就聊的很开心了，项目经理和HR聊得都是关于压力和生活的问题了，结束了，项目经理让我回去等消息。我觉得这次面试还算顺利，心里至少有谱了，回到宿舍，整好志恒老师约我出去吃烧烤，我当时一个人在宿舍也焖的慌，就果断去了，志恒老师安慰了我一阵子，这个公司如果不发offer，周一继续接着面试，下面分享一张我们当时吃烧烤的情景：</p>\n<p><img src=\"/images/atguigu/shaokao.jpg\" alt=\"shaokao\"/></p>\n<p>到了周一早上，我收拾好心情，继续面试。这一家是在望京，我8点起床，骑摩拜去地铁口，路上还碰到了志恒老师。快到那个公司附近的时候，周五面试那家的人事给我打电话，让我明天入职，我开心的不得了，不过这一家面试还是要继续去的。这是一家坐互联网金融的公司，但是邀请我面试的是一家外包公司，面试我的看上去也是新手，技术不是多老练，问我的问题基本上都能答出来，碰到没遇到过的问题，我就直接说不会，但是中间有一个小插曲，他在问我问题的时候，在本子上写数组结构的时候，竟然给写成了对象结构，我一眼就看了出来，我说这样写不正确，他犹豫了一下，发现自己的确写错了，于是他就开始慌了，这个时候我开始变的得意起来，我就主动告诉他，你不知道问什么，可以问一些关于原型链和闭包的问题，他就跟着我的节奏问了起来，后面的一切也很顺利，技术主管，经理都过来问了我一些问题，对我很满意，可是我觉得这家公司的待遇不如上一家，我就委婉的拒绝了他们的offer。</p>\n<p>现在我已经入职快9个月了，最困难的还是刚入职的那段时间，因为有三个月的试用期。试用期的时候，因为我自己的技术原因，拖慢了项目的进度，项目经理都考虑要辞退我了，那一段时间是我最害怕的时候，不过还好我挺过来了，在做第二个的项目的时候，是我自己独立做完的，上线也很顺利，我也就顺利度过了试用期，在这里非常感谢学校的老师们，他们在学校教会了我处理问题的方法，教会了我一身本领。</p>\n<p>学校是一个小而精的公司，我在这学到的不仅是技术，更是以后的生活态度，感谢学校给我提供的学习平台，在这里要感谢的人太多，其实我们在学习的过程中，身边的同学更是我们宝贵的财富，他们和我们的时刻保持在同一水平线上，遇到学习困难时候，他们会立刻响应你，谢谢我的组员们，有你们我才是一个合格的组长，这里分享一张我们组的合影：</p>\n<p><img src=\"/images/atguigu/heying.jpg\" alt=\"heying\"/></p>\n<p>硅谷学子，不输于人，感谢学校，感谢同学们。</p>\n<p>2018年5月29日，于北京。</p>",
            "url": "undefined/articles/vue_press_ui/atguigu",
            "title": "我的求学之路",
            "summary": "在尚硅谷",
            "date_modified": "2018-05-29T00:00:00.000Z",
            "author": {
                "name": "Yang"
            }
        }
    ]
}